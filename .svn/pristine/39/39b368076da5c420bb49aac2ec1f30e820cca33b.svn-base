<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.jcms.front.statistics.mapper.StatisticsMapper">
		<select id="selectRealTimeDataList" parameterType="Map" resultType="egovMap">
			SELECT * FROM
			(SELECT A.*, B.SITE_NAME, B.SITE_RPMSNO, B.SITE_ALTOC, B.SITE_DPH, 
			TO_CHAR(TO_DATE(A.DATA_TIME, 'YYYYMMDDhh24miss'), 'YYYY-MM-DD hh24:mi:ss') AS CH_DATA_TIME FROM
			(SELECT * FROM
			(SELECT ROW_NUMBER() OVER(PARTITION BY A.SITE_ID, A.M_SN ORDER BY A.DATA_TIME DESC) RNUM, A.* FROM GW_DATA_VALUE A)
			WHERE RNUM = 1) A
			LEFT OUTER JOIN
			VW_GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			ORDER BY B.SITE_NAME, A.M_SN)
			WHERE 1=1
			<if test="searchTitle == 'nm'">
				AND SITE_NAME LIKE '%'||#{searchTxt}||'%'
			</if>
			<if test="searchTitle == 'perm'">
				AND UPPER(SITE_RPMSNO) LIKE '%'||UPPER(#{searchTxt})||'%'
			</if>
		</select>
		
		<select id="selectObsvname" resultType="egovMap">
			SELECT DISTINCT SITE_ID, SITE_NAME FROM GW_SITE_INFO
		</select>
		
		<select id="selectSensorNm" parameterType="Map" resultType="egovMap">
			SELECT DISTINCT 'S'||SUBSTR(USE_PORT,2,2) AS SENSOR_NM, B.SITE_NAME
			FROM VW_GW_SENSOR_INFO A
			LEFT JOIN GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			WHERE B.SITE_NAME=#{searchObsvname}
			ORDER BY SENSOR_NM
		</select>
		
		<select id="selectAvgList" parameterType="Map" resultType="egovMap">
			SELECT * FROM(
			<if test="searchStatistics == 1">
			SELECT SUBSTR(DATA_TIME,1,4)||'-'||SUBSTR(DATA_TIME,5,2)||'-'||SUBSTR(DATA_TIME,7,2)||' '||SUBSTR(DATA_TIME,9,2)||':'||SUBSTR(DATA_TIME,11,2)||':'||SUBSTR(DATA_TIME,13,2) AS TIME,
			M_SN AS SENSOR, ROUND(GL,2) AS GL, ROUND(PRESSR,2) AS PRESSR, ROUND(TEMP,2) AS TEMP, ROUND(EC,0) AS EC, ROUND(BARO,0) AS BARO, ROUND(BATT,1) AS BATT
			FROM GW_DATA_VALUE A
			LEFT JOIN GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			WHERE M_SN = #{sensorNm} AND SITE_NAME = #{searchObsvname}
			AND DATA_TIME BETWEEN #{fDate} AND TO_CHAR(TO_NUMBER(#{lDate})+1)
			ORDER BY TIME DESC
			</if>
			
			<if test="searchStatistics == 2">
			SELECT SUBSTR(TIME,1,4)||'-'||SUBSTR(TIME,5,2)||'-'||SUBSTR(TIME,7,2)||' '||SUBSTR(TIME,9,2) AS TIME, SENSOR, GL, PRESSR, TEMP, EC, BARO, BATT FROM 
			(SELECT TIME, #{sensorNm} AS SENSOR, ROUND(AVG(GL),2) AS GL, ROUND(AVG(PRESSR),2) AS PRESSR, ROUND(AVG(TEMP),2) AS TEMP, ROUND(AVG(EC),0) AS EC, ROUND(AVG(BARO),0) AS BARO, ROUND(AVG(BATT),1) AS BATT
			FROM
			(SELECT SUBSTR(DATA_TIME,1,10) AS TIME, M_SN, GL, PRESSR, TEMP, EC, BARO, BATT, A.SITE_ID, SITE_NAME 
			FROM GW_DATA_VALUE A
			LEFT JOIN GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			WHERE M_SN = #{sensorNm} AND SITE_NAME = #{searchObsvname}
			AND DATA_TIME BETWEEN #{fDate} AND TO_CHAR(TO_NUMBER(#{lDate})+1))
			GROUP BY TIME ORDER BY TIME DESC)
			</if>
			
			<if test="searchStatistics == 3">
			SELECT SUBSTR(TIME,1,4)||'-'||SUBSTR(TIME,5,2)||'-'||SUBSTR(TIME,7,2) AS TIME, SENSOR, GL, PRESSR, TEMP, EC, BARO, BATT FROM 
			(SELECT TIME, #{sensorNm} AS SENSOR, ROUND(AVG(GL),2) AS GL, ROUND(AVG(PRESSR),2) AS PRESSR, ROUND(AVG(TEMP),2) AS TEMP, ROUND(AVG(EC),0) AS EC, ROUND(AVG(BARO),0) AS BARO, ROUND(AVG(BATT),1) AS BATT
			FROM
			(SELECT SUBSTR(DATA_TIME,1,8) AS TIME, M_SN, GL, PRESSR, TEMP, EC, BARO, BATT, A.SITE_ID, SITE_NAME 
			FROM GW_DATA_VALUE A
			LEFT JOIN GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			WHERE M_SN = #{sensorNm} AND SITE_NAME = #{searchObsvname}
			AND DATA_TIME BETWEEN #{fDate} AND TO_CHAR(TO_NUMBER(#{lDate})+1))
			GROUP BY TIME ORDER BY TIME DESC)
			</if>
			
			<if test="searchStatistics == 4">
			SELECT SUBSTR(TIME,1,4)||'-'||SUBSTR(TIME,5,2) AS TIME, SENSOR, GL, PRESSR, TEMP, EC, BARO, BATT FROM 
			(SELECT TIME, #{sensorNm} AS SENSOR, ROUND(AVG(GL),2) AS GL, ROUND(AVG(PRESSR),2) AS PRESSR, ROUND(AVG(TEMP),2) AS TEMP, ROUND(AVG(EC),0) AS EC, ROUND(AVG(BARO),0) AS BARO, ROUND(AVG(BATT),1) AS BATT
			FROM
			(SELECT SUBSTR(DATA_TIME,1,6) AS TIME, M_SN, GL, PRESSR, TEMP, EC, BARO, BATT, A.SITE_ID, SITE_NAME 
			FROM GW_DATA_VALUE A
			LEFT JOIN GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			WHERE M_SN = #{sensorNm} AND SITE_NAME = #{searchObsvname}
			AND DATA_TIME BETWEEN #{fDate} AND TO_CHAR(TO_NUMBER(#{lDate})+1))
			GROUP BY TIME ORDER BY TIME DESC)
			</if>
			)
		</select>
		
		<select id="selectAvgListCnt" parameterType="Map" resultType="integer">
			SELECT COUNT(*) FROM(
			<if test="searchStatistics == 1">
			SELECT SUBSTR(DATA_TIME,1,4)||'-'||SUBSTR(DATA_TIME,5,2)||'-'||SUBSTR(DATA_TIME,7,2)||' '||SUBSTR(DATA_TIME,9,2)||':'||SUBSTR(DATA_TIME,11,2)||':'||SUBSTR(DATA_TIME,13,2) AS TIME,
			M_SN AS SENSOR, ROUND(GL,2) AS GL, ROUND(PRESSR,2) AS PRESSR, ROUND(TEMP,2) AS TEMP, ROUND(EC,0) AS EC, ROUND(BARO,0) AS BARO, ROUND(BATT,1) AS BATT
			FROM GW_DATA_VALUE A
			LEFT JOIN GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			WHERE M_SN = #{sensorNm} AND SITE_NAME = #{searchObsvname}
			AND DATA_TIME BETWEEN #{fDate} AND TO_CHAR(TO_NUMBER(#{lDate})+1)
			ORDER BY TIME DESC
			</if>
			
			<if test="searchStatistics == 2">
			SELECT SUBSTR(TIME,1,4)||'-'||SUBSTR(TIME,5,2)||'-'||SUBSTR(TIME,7,2)||' '||SUBSTR(TIME,9,2) AS TIME, SENSOR, GL, PRESSR, TEMP, EC, BARO, BATT FROM 
			(SELECT TIME, #{sensorNm} AS SENSOR, ROUND(AVG(GL),2) AS GL, ROUND(AVG(PRESSR),2) AS PRESSR, ROUND(AVG(TEMP),2) AS TEMP, ROUND(AVG(EC),0) AS EC, ROUND(AVG(BARO),0) AS BARO, ROUND(AVG(BATT),1) AS BATT
			FROM
			(SELECT SUBSTR(DATA_TIME,1,10) AS TIME, M_SN, GL, PRESSR, TEMP, EC, BARO, BATT, A.SITE_ID, SITE_NAME 
			FROM GW_DATA_VALUE A
			LEFT JOIN GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			WHERE M_SN = #{sensorNm} AND SITE_NAME = #{searchObsvname}
			AND DATA_TIME BETWEEN #{fDate} AND TO_CHAR(TO_NUMBER(#{lDate})+1))
			GROUP BY TIME ORDER BY TIME DESC)
			</if>
			
			<if test="searchStatistics == 3">
			SELECT SUBSTR(TIME,1,4)||'-'||SUBSTR(TIME,5,2)||'-'||SUBSTR(TIME,7,2) AS TIME, SENSOR, GL, PRESSR, TEMP, EC, BARO, BATT FROM 
			(SELECT TIME, #{sensorNm} AS SENSOR, ROUND(AVG(GL),2) AS GL, ROUND(AVG(PRESSR),2) AS PRESSR, ROUND(AVG(TEMP),2) AS TEMP, ROUND(AVG(EC),0) AS EC, ROUND(AVG(BARO),0) AS BARO, ROUND(AVG(BATT),1) AS BATT
			FROM
			(SELECT SUBSTR(DATA_TIME,1,8) AS TIME, M_SN, GL, PRESSR, TEMP, EC, BARO, BATT, A.SITE_ID, SITE_NAME 
			FROM GW_DATA_VALUE A
			LEFT JOIN GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			WHERE M_SN = #{sensorNm} AND SITE_NAME = #{searchObsvname}
			AND DATA_TIME BETWEEN #{fDate} AND TO_CHAR(TO_NUMBER(#{lDate})+1))
			GROUP BY TIME ORDER BY TIME DESC)
			</if>
			
			<if test="searchStatistics == 4">
			SELECT SUBSTR(TIME,1,4)||'-'||SUBSTR(TIME,5,2) AS TIME, SENSOR, GL, PRESSR, TEMP, EC, BARO, BATT FROM 
			(SELECT TIME, #{sensorNm} AS SENSOR, ROUND(AVG(GL),2) AS GL, ROUND(AVG(PRESSR),2) AS PRESSR, ROUND(AVG(TEMP),2) AS TEMP, ROUND(AVG(EC),0) AS EC, ROUND(AVG(BARO),0) AS BARO, ROUND(AVG(BATT),1) AS BATT
			FROM
			(SELECT SUBSTR(DATA_TIME,1,6) AS TIME, M_SN, GL, PRESSR, TEMP, EC, BARO, BATT, A.SITE_ID, SITE_NAME 
			FROM GW_DATA_VALUE A
			LEFT JOIN GW_SITE_INFO B
			ON A.SITE_ID = B.SITE_ID
			WHERE M_SN = #{sensorNm} AND SITE_NAME = #{searchObsvname}
			AND DATA_TIME BETWEEN #{fDate} AND TO_CHAR(TO_NUMBER(#{lDate})+1))
			GROUP BY TIME ORDER BY TIME DESC)
			</if>
			)
		</select>
</mapper>