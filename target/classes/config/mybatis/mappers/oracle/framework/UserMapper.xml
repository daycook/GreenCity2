<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="net.jcms.framework.security.mapper.UserMapper">

	<select id="selectList" parameterType="userSearch" resultType="user">
		select  *
			from  (
		select ROWNUM RNUM , T.* 
			from  (
		select
		ALL_LIST.*
			from  (		
			select	
				USER_ID, USER_LOGIN_ID, USER_PWD, USER_NM, USER_ST_CD, REG_DT, FAIL_CNT, ADDR, EMAIL, USER_OUT_RSN
			from		
				JCMS_USER 
			where
				1 = 1
		<if test="!empty(userLoginIdLike)" > and USER_LOGIN_ID LIKE '%'|| #{userLoginIdLike} ||'%' </if>
		<if test="!empty(userNmLike)" > and USER_NM LIKE '%'|| #{userNmLike} ||'%' </if>
		<if test="!empty(userStCd)" > and USER_ST_CD = #{userStCd} </if>
		<if test="!empty(sort) and !empty(sortOrd)">
	    	order by
	        <choose>  
	            <when test="sort == 'USER_ID'"> USER_ID </when>
	            <when test="sort == 'USER_LOGIN_ID'"> USER_LOGIN_ID </when> 
	            <when test="sort == 'USER_NM'"> USER_NM </when> 
	            <when test="sort == 'USER_ST_CD'"> USER_ST_CD </when> 
	            <when test="sort == 'FAIL_CNT'"> FAIL_CNT </when>
	        </choose>  
	        <choose>
	        	<when test="sortOrd == 'asc'"> ASC </when>
	        	<when test="sortOrd == 'desc'"> DESC </when>
	        </choose>             
	 	</if>
	       	) ALL_LIST
			where 1 = 1
			) T
			)
	    <if test="pagingYn == true" >
	    <![CDATA[			    
			 where  RNUM  > #{start} and  RNUM <= #{start} + #{length}
		]]>
		</if>
	</select>
	
	<select id="checkIdDuplicate" parameterType="userSearch" resultType="java.lang.Integer">
		select
			COUNT(USER_ID)
		from
			JCMS_USER
		where
			USER_LOGIN_ID = #{userLoginId}
	</select>
	
	<select id="login" parameterType="user" resultType="user">
		select	
			USER_ID, USER_LOGIN_ID, USER_PWD, USER_NM, USER_ST_CD, FAIL_CNT
		from		
			JCMS_USER
		where	
			USER_LOGIN_ID = #{userLoginId} and
			USER_ST_CD = '1'
	</select>
	
	<select id="select" parameterType="userSearch" resultType="user">
		select	
			*
		from		
			JCMS_USER
		<where>	
			<if test="!empty(userLoginId)" > USER_LOGIN_ID = #{userLoginId} </if>
			<if test="!empty(userId)" > and USER_ID = #{userId} </if>
			<if test="!empty(userNm)" > and USER_NM = #{userNm} </if>
			<if test="!empty(email)" > and EMAIL = #{email} </if>
		</where>			
	</select>
	
	<select id="count" parameterType="userSearch" resultType="java.lang.Integer">
		select 
			COUNT(USER_ID)
		from
			JCMS_USER
		<where>
			<if test="!empty(userLoginIdLike)" > and USER_LOGIN_ID LIKE '%'|| #{userLoginIdLike} ||'%' </if>
			<if test="!empty(userNmLike)" > and USER_NM LIKE '%'|| #{userNmLike}|| '%' </if>
			<if test="!empty(userStCd)" > and USER_ST_CD = #{userStCd} </if>
		</where>
	</select>
	
	<select id="userPwdCheck" parameterType="userSearch" resultType="java.lang.Integer">
		select
			COUNT(USER_ID)
		from
			JCMS_USER
		where
			USER_ID = #{userId} and
			USER_PWD = #{userPwd}
	</select>
	
	<insert id="insert" parameterType="user">
		<selectKey keyProperty="userId" resultType="java.lang.Long" order="BEFORE" >
	    	select USER_ID_SEQ.NEXTVAL from DUAL
	  	</selectKey>
  		insert into JCMS_USER (USER_ID, USER_LOGIN_ID, USER_NM, USER_PWD, USER_DI, BIRTH, ADULT_YN, EMAIL, ADDR, MOBILE, FAIL_CNT,
  							   USER_ST_CD, USER_OUT_RSN, REG_ID, REG_DT, UPD_ID, UPD_DT, DEL_ID, DEL_DT, USE_ST )
  		               values (#{userId}, #{userLoginId}, #{userNm}, #{userPwd}, #{userDi}, #{birth}, #{adultYn}, #{email}, #{addr}, #{mobile}, 0, 
  		                       1, #{userOutRsn}, #{regId}, SYSDATE, #{updId}, #{updDt}, #{delId}, #{delDt}, 'Y' )
	</insert>
	
	<update id="update" parameterType="user">
		update JCMS_USER set
			UPD_ID = #{updId}
			,UPD_DT = SYSDATE
			<if test="!empty(userPwd)" > ,USER_PWS = #{userPwd} </if>
			<if test="!empty(email)" > ,EMAIL = #{email} </if>
			<if test="!empty(userNm)" > ,USER_NM = #{userNm} </if>
			<if test="!empty(userStCd)" > , USER_ST_CD = #{userStCd} </if>
		where
			USER_ID = #{userId}
	</update>
	
	<update id="delete" parameterType="user">
		update JCMS_USER set
			DEL_ID = #{delId},
			DEL_DT = SYSDATE
		where
			USER_ID = #{userId} 
	</update>
	
	<update id="updateUserLoginFail" parameterType="user">
		update JCMS_USER set
			FAIL_CNT = #{failCnt}
		where
			USER_ID = #{userId} 
	</update>
	
	<update id="updateInitUserLoginFailCnt" parameterType="user">
		update JCMS_USER set
			FAIL_CNT = 0
		where
			USER_ID = #{userId} 
	</update>
	
	<update id="updatePwd" parameterType="user">
		update JCMS_USER set
			USER_PWD = #{userPwd}
		where
			USER_ID = #{userId}
	</update>
	
	<select id="thisWeekInUserCount" resultType="java.lang.Integer">
		select
			COUNT(USER_ID)
		from
			JCMS_USER
		where REG_DT  > SYSDATE - 7
	</select>
	
	<select id="thisWeekOutUserCount" resultType="java.lang.Integer">
		select
			COUNT(USER_ID)
		from
			JCMS_USER
		where 
			USER_ST_CD = '9'
		and UPD_DT > SYSDATE - 7
	</select>
	
	<select id="thisWeekInUser" resultType="user">	
		select
			USER_ID, USER_LOGIN_ID, USER_NM, USER_ST_CD, REG_DT
		from
			JCMS_USER
		where 
			DEL_DT IS NULL
		and REG_DT > SYSDATE - 7 
		order by REG_DT DESC
	</select>
	
	<select id="thisWeekOutUser" resultType="java.lang.Integer">
		select
			COUNT(USER_ID)
		from
			JCMS_USER
		where 
			USER_ST_CD = '9'
		and UPD_DT > SYSDATE - 7
	</select>
	
	<select id="userTotalOutCount" resultType="java.lang.Integer">
		select
			COUNT(USER_ID)
		from
			JCMS_USER
		where 
			USER_ST_CD = '9'
	</select>
	
</mapper>
